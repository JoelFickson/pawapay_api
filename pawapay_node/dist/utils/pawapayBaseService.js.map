{"version":3,"file":"pawapayBaseService.js","sourceRoot":"","sources":["../../src/utils/pawapayBaseService.ts"],"names":[],"mappings":";;;;;;;;AAAA,uCAAqD;AAKtC,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAErC,iBAAiB,CAAC,WAAmB;QACnC,OAAO,WAAW,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED;;;;;;;;;;;;;;;;;OAiBG;IACH,sBAAsB,CAAC,QAAiB;QAEtC,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,IAAI,EAAE,CAAC;YAEtD,MAAM,eAAe,GAAG,cAAc,IAAI,QAAQ,IAAI,OAAQ,QAAgB,CAAC,YAAY,KAAK,QAAQ,CAAC;YACzG,MAAM,aAAa,GAAG,YAAY,IAAI,QAAQ,IAAI,OAAQ,QAAgB,CAAC,UAAU,KAAK,QAAQ,CAAC;YACnG,MAAM,cAAc,GAAG,aAAa,IAAI,QAAQ,IAAI,OAAQ,QAAgB,CAAC,WAAW,KAAK,QAAQ,CAAC;YAEtG,OAAO,eAAe,IAAI,aAAa,IAAI,cAAc,CAAC;QAC5D,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CAEF,CAAA;AAtCoB,kBAAkB;IAFtC,IAAA,yBAAc,GAAE;IAChB,IAAA,oBAAS,GAAE;GACS,kBAAkB,CAsCtC;kBAtCoB,kBAAkB","sourcesContent":["import { autoInjectable, singleton } from \"tsyringe\";\nimport { PawaPayNetworkResponse } from \"types/pawaPayErrorResponse\";\n\n@autoInjectable()\n@singleton()\nexport default class PawapayBaseService {\n\n  formatPhoneNumber(phoneNumber: string): string {\n    return phoneNumber.replace(/^([+0])/, \"\");\n  }\n\n  /**\n   * Checks if a given response is a PawaPayNetworkResponse.\n   *\n   * This function is a type guard that attempts to determine if an unknown input\n   * conforms to the PawaPayNetworkResponse interface by checking for the presence\n   * and type of specific properties. Specifically, it checks for the properties\n   * `errorMessage`, `statusCode`, and `errorObject`, and verifies that these properties\n   * are of the correct types (string for `errorMessage` and `errorObject`, and number\n   * for `statusCode`).\n   *\n   * @param {unknown} response - The response object to check. Its type is unknown\n   *                             to allow for any input, as the purpose of this function\n   *                             is to perform runtime type checking.\n   * @returns {response is PawaPayNetworkResponse} True if the input object matches\n   *          the PawaPayNetworkResponse interface, otherwise false. This return type\n   *          enables TypeScript's type narrowing, allowing the compiler to treat\n   *          validated objects as being of type PawaPayNetworkResponse within conditional blocks.\n   */\n  isPawaPayErrorResponse(response: unknown): response is PawaPayNetworkResponse {\n\n    if (typeof response === \"object\" && response !== null) {\n\n      const hasErrorMessage = \"errorMessage\" in response && typeof (response as any).errorMessage === \"string\";\n      const hasStatusCode = \"statusCode\" in response && typeof (response as any).statusCode === \"number\";\n      const hasErrorObject = \"errorObject\" in response && typeof (response as any).errorObject === \"string\";\n\n      return hasErrorMessage && hasStatusCode && hasErrorObject;\n    }\n\n    return false;\n  }\n\n}"]}